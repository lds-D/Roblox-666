local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")

local LOCK_KEY = Enum.KeyCode.RightShift
local TARGET_PART = "Head"
local ACTIVATE_RADIUS = 100
local GAMEPAD_TRIGGER = Enum.KeyCode.ButtonL2
local TRIGGER_THRESHOLD = 0.3

local DYNAMIC_SMOOTHING = {
    Enabled = true,
    MinDistance = 10,
    MaxDistance = 50,
    CloseSmooth = 0.15,
    FarSmooth = 0.4,
    CurveFactor = 2.5
}

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local target = nil
local currentSmoothness = DYNAMIC_SMOOTHING.CloseSmooth

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AimAssistUI"
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

local tutorialFrame = Instance.new("Frame")
tutorialFrame.Size = UDim2.new(0.35, 0, 0.25, 0)
tutorialFrame.Position = UDim2.new(0.65, 0, 0.7, 0)
tutorialFrame.BackgroundTransparency = 0.8
tutorialFrame.Visible = false

local hintTexts = {
    Mobile = "üì± ÈïøÊåâÂè≥‰æßÂå∫ÂüüÈîÅÂÆöÁõÆÊ†á",
    Gamepad = "üéÆ Êåâ‰ΩèÂ∑¶Êâ≥Êú∫(LT)ÈîÅÂÆö+ÂéãÂäõÊÑüÂ∫î",
    Desktop = "üñ±Ô∏è Êåâ‰ΩèÂè≥ÈîÆÊãñÂä®ÁûÑÂáÜ"
}

local deviceHint = Instance.new("TextLabel")
deviceHint.Text = "ËÆæÂ§áÊ£ÄÊµã‰∏≠..."
deviceHint.TextColor3 = Color3.new(1,1,1)
deviceHint.Size = UDim2.new(1, 0, 1, 0)
deviceHint.Font = Enum.Font.GothamMedium
deviceHint.Parent = tutorialFrame
screenGui.Parent = tutorialFrame

local function getDeviceType()
    if UIS.TouchEnabled then return "Mobile" end
    if UIS:GetLastInputType().Name:find("Gamepad") then return "Gamepad" end
    return "Desktop"
end

local function getValidTargets()
    local targets = {}
    return targets
end

local function findBestTarget()
    local closest = nil
    local minDistance = math.huge
    for _, targetData in ipairs(getValidTargets()) do
        local distance = (targetData.ScreenPos - camera.ViewportSize/2).Magnitude
        if distance < minDistance then
            closest = targetData
            minDistance = distance
        end
    end
    return closest
end

local activeTouchId = nil
local touchFrame = Instance.new("Frame")
touchFrame.Size = UDim2.new(0.3, 0, 0.6, 0)
touchFrame.BackgroundTransparency = 1
touchFrame.Parent = screenGui

UIS.TouchStarted:Connect(function(touch)
    if getDeviceType() ~= "Mobile" then return end
    local center = touchFrame.AbsolutePosition + touchFrame.AbsoluteSize/2
    if (touch.Position - center).Magnitude < ACTIVATE_RADIUS then
        activeTouchId = touch.UserInputType
        target = findBestTarget()
    end
end)

UIS.TouchEnded:Connect(function(touch)
    if touch.UserInputType == activeTouchId then
        target = nil
        activeTouchId = nil
    end
end)

UIS.InputChanged:Connect(function(input)
    if getDeviceType() ~= "Gamepad" then return end
    if input.UserInputType == Enum.UserInputType.Gamepad1 then
        if input.KeyCode == GAMEPAD_TRIGGER then
            local triggerValue = input.Position.Z
            if triggerValue > TRIGGER_THRESHOLD then
                target = target or findBestTarget()
                currentSmoothness = DYNAMIC_SMOOTHING.CloseSmooth * 
                    (1 - (triggerValue - TRIGGER_THRESHOLD)/(1 - TRIGGER_THRESHOLD)*0.5)
            else
                target = nil
            end
        end
    end
end)

UIS.InputBegan:Connect(function(input)
    if getDeviceType() == "Desktop" then
        if input.UserInputType == Enum.UserInputType.MouseButton2 then
            target = findBestTarget()
        end
    end
end)

local function calculateDynamicSmoothness(targetPos)
    if not DYNAMIC_SMOOTHING.Enabled then return currentSmoothness end
    local distance = (targetPos - camera.CFrame.Position).Magnitude
    distance = math.clamp(distance, DYNAMIC_SMOOTHING.MinDistance, DYNAMIC_SMOOTHING.MaxDistance)
    local t = (distance - DYNAMIC_SMOOTHING.MinDistance) / 
             (DYNAMIC_SMOOTHING.MaxDistance - DYNAMIC_SMOOTHING.MinDistance)
    return DYNAMIC_SMOOTHING.CloseSmooth + 
           (DYNAMIC_SMOOTHING.FarSmooth - DYNAMIC_SMOOTHING.CloseSmooth) * 
           math.pow(t, DYNAMIC_SMOOTHING.CurveFactor)
end

local function smoothAim(targetPos)
    local dynamicSmooth = calculateDynamicSmoothness(targetPos)
    local targetCFrame = CFrame.lookAt(camera.CFrame.Position, targetPos)
    camera.CFrame = camera.CFrame:Lerp(targetCFrame, dynamicSmooth)
end

RunService.Heartbeat:Connect(function()
    local deviceType = getDeviceType()
    tutorialFrame.Visible = true
    deviceHint.Text = hintTexts[deviceType]

    if target and not target.Part:IsDescendantOf(workspace) then
        target = nil
    end

    if target then
        smoothAim(target.Part.Position)
    end
end)
